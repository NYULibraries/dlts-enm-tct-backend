{
    "docs": [
        {
            "location": "/",
            "text": "Enhanced Network Monographs\n\n\nInstallation descriptions are coming soon.  In the meantime, please feel free to explore the \nAPI Documentation\n.",
            "title": "Home"
        },
        {
            "location": "/#enhanced-network-monographs",
            "text": "Installation descriptions are coming soon.  In the meantime, please feel free to explore the  API Documentation .",
            "title": "Enhanced Network Monographs"
        },
        {
            "location": "/installation/",
            "text": "Requirements\n\n\nBase Software Dependencies\n\n\nThis software is required for proper functioning of the ENM Ingest backend:\n\n\n\n\nPython >=3.3\n\n\nPostgreSQL\n\n\n\n\n\n\nNote\n\n\nThe \nENM Topic Curation Backend\n requires several postgres-specific features, including ArrayFields and column-specific distinct queries.  Subbing in another RDBMS such as SQLite or MySQL will likely render the software inoperable\n\n\n\n\nPython Dependencies\n\n\nThe main python dependencies can be installed from the \nrequirements.txt\n file, which includes the specific version numbers used in development and production. You can simply install all required python libraries by type:\n\n\npip install requirements.txt\n\n\n\n\n\nIn case you need to reference the library list, though, here is the full list of python dependencies:\n\n\n\n\nDjango==1.10.3\n\n\ndjango-allauth==0.27.0\n\n\ndjango-autoslug==1.9.3\n\n\ndjango-cors-headers==1.1.0\n\n\ndjango-debug-toolbar==1.5\n\n\ndjango-extensions==1.7.2\n\n\ndjango-filter==0.14.0\n\n\ndjango-rest-auth==0.8.1\n\n\ndjangorestframework==3.4.6\n\n\nlxml==3.6.4\n\n\npsycopg2==2.6.2\n\n\n\n\nThis documentation was built with the \nMkDocs\n markdown-based documentation library.  If you want to make changes to this documentation, this requires several additional python libraries:\n\n\n\n\nMarkdown==2.6.8\n\n\nmkdocs==0.16.1\n\n\nmkdocs-material==1.0.3\n\n\nPygments==2.2.0\n\n\npymdown-extensions==1.8\n\n\n\n\nFor convenience, this all can be install via:\n\n\npip install requirements-documentation.txt\n\n\n\n\n\nCurrent Production Platform\n\n\nThe following represent the current production environment for running the ENM Topic Curation Backend. These are not required, but having been tested as an effective production system:\n\n\n\n\nOS\n: Ubuntu 16.04\n\n\nApplication Server\n: uWSGI\n\n\nWeb Server\n: nginx",
            "title": "Installation"
        },
        {
            "location": "/installation/#requirements",
            "text": "",
            "title": "Requirements"
        },
        {
            "location": "/installation/#base-software-dependencies",
            "text": "This software is required for proper functioning of the ENM Ingest backend:   Python >=3.3  PostgreSQL    Note  The  ENM Topic Curation Backend  requires several postgres-specific features, including ArrayFields and column-specific distinct queries.  Subbing in another RDBMS such as SQLite or MySQL will likely render the software inoperable",
            "title": "Base Software Dependencies"
        },
        {
            "location": "/installation/#python-dependencies",
            "text": "The main python dependencies can be installed from the  requirements.txt  file, which includes the specific version numbers used in development and production. You can simply install all required python libraries by type:  pip install requirements.txt  In case you need to reference the library list, though, here is the full list of python dependencies:   Django==1.10.3  django-allauth==0.27.0  django-autoslug==1.9.3  django-cors-headers==1.1.0  django-debug-toolbar==1.5  django-extensions==1.7.2  django-filter==0.14.0  django-rest-auth==0.8.1  djangorestframework==3.4.6  lxml==3.6.4  psycopg2==2.6.2   This documentation was built with the  MkDocs  markdown-based documentation library.  If you want to make changes to this documentation, this requires several additional python libraries:   Markdown==2.6.8  mkdocs==0.16.1  mkdocs-material==1.0.3  Pygments==2.2.0  pymdown-extensions==1.8   For convenience, this all can be install via:  pip install requirements-documentation.txt",
            "title": "Python Dependencies"
        },
        {
            "location": "/installation/#current-production-platform",
            "text": "The following represent the current production environment for running the ENM Topic Curation Backend. These are not required, but having been tested as an effective production system:   OS : Ubuntu 16.04  Application Server : uWSGI  Web Server : nginx",
            "title": "Current Production Platform"
        },
        {
            "location": "/api/overview/",
            "text": "API Overview\n\n\nIn order to make this documentation as flexible as possible, all API endpoints are listed relative to the base domain -- for example, the endpoints to get all topics is listed as:\n\n\n/api/hit/basket/all/\n\n\n\n\n\nIf the api were at \nhttp://api.enhanced-network-monographs.com\n (just, to be clear, a totally invented url), the full URL to access the above endpoint would be:\n\n\nhttp://api.enhanced-network-monographs.com/api/hit/basket/all\n\n\n\n\n\n\n\nNote\n\n\nThis documentation \nonly\n covers the publicly accessible (i.e. read-only) API Endpoints. API endpoints that actually manipulate the database (such as adding and deleting Topics) require authentication, and can currently only be used via the \nTopic Curation Toolkit\n.\n\n\n\n\n\n\nIDs and Consistency\n\n\nMost objects in the database have an \nid\n attribute. IDs are guaranteed to be unique for that particular resource in a database: only one \nbasket\n object will have an ID of \n10\n, for example.  However, the system does \nnot\n guarantee that IDs will be consistent across databases.  In other words, if an ingest is done from scratch on a new system (rather than importing a database copy), IDs may not match those from a different ingest.\n\n\n\n\nAPI Categories\n\n\n\n\nTopics\n: All API endpoints relating to Topics and Names\n\n\nSources\n: All API endpoitns relating to Epubs and Pages",
            "title": "Overview"
        },
        {
            "location": "/api/overview/#api-overview",
            "text": "In order to make this documentation as flexible as possible, all API endpoints are listed relative to the base domain -- for example, the endpoints to get all topics is listed as:  /api/hit/basket/all/  If the api were at  http://api.enhanced-network-monographs.com  (just, to be clear, a totally invented url), the full URL to access the above endpoint would be:  http://api.enhanced-network-monographs.com/api/hit/basket/all   Note  This documentation  only  covers the publicly accessible (i.e. read-only) API Endpoints. API endpoints that actually manipulate the database (such as adding and deleting Topics) require authentication, and can currently only be used via the  Topic Curation Toolkit .    IDs and Consistency  Most objects in the database have an  id  attribute. IDs are guaranteed to be unique for that particular resource in a database: only one  basket  object will have an ID of  10 , for example.  However, the system does  not  guarantee that IDs will be consistent across databases.  In other words, if an ingest is done from scratch on a new system (rather than importing a database copy), IDs may not match those from a different ingest.",
            "title": "API Overview"
        },
        {
            "location": "/api/overview/#api-categories",
            "text": "Topics : All API endpoints relating to Topics and Names  Sources : All API endpoitns relating to Epubs and Pages",
            "title": "API Categories"
        },
        {
            "location": "/api/topics/",
            "text": "API Overview\n\n\n\n\n\n\n\n\nDescription\n\n\nEndpoint\n\n\nExtra Parameters\n\n\n\n\n\n\n\n\n\n\nList of All Topics\n\n\n/api/hit/basket/all/\n\n\n\n\n\n\n\n\nList of Subset of Topics\n\n\n/api/hit/basket/search/\n\n\nletter, document\n\n\n\n\n\n\nTopic Detail\n\n\n/api/hit/basket/BASKET_ID/\n\n\n\n\n\n\n\n\nAll Topics (with review data)\n\n\n/api/review/baskets/all\n\n\n\n\n\n\n\n\nSubset of Topics (with review data)\n\n\n/api/review/baskets/search\n\n\nletter, document\n\n\n\n\n\n\nList of All Names\n\n\n/api/hit/hits/all/\n\n\n\n\n\n\n\n\nList of Subset of Names\n\n\n/api/hit/hits/search/\n\n\nname, letter, scope, ttype\n\n\n\n\n\n\n\n\n\n\nA Note on Terminology\n\n\nYou may notice the terms \nbasket\n and \nhit\n a lot on this page.  Internally, this is how our topic mapping software refers to \ntopics\n and \nnames\n, respectively.  In almost all cases, mentally replacing \nbasket\n with \ntopic\n and \nhit\n with \nname\n will work perfectly.\n\n\n\n\n\n\nAll Topics\n\n\nGives a list of all topics in the system:\n\n\n/api/hit/basket/all/\n\n\n\n\n\nExample response\n\n\n[\n\n    \n{\n\n        \n\"id\"\n:\n \n3037\n,\n\n        \n\"display_name\"\n:\n \n\"17 U.S.C. \u00a7120(a)\"\n\n    \n},\n\n    \n{\n\n        \n\"id\"\n:\n \n30823\n,\n\n        \n\"display_name\"\n:\n \n\"1950s\"\n\n    \n},\n\n    \n...\n\n    \n{\n\n        \n\"id\"\n:\n \n22291\n,\n\n        \n\"display_name\"\n:\n \n\"Zwerdling, Alex\"\n\n    \n},\n\n    \n{\n\n        \n\"id\"\n:\n \n25992\n,\n\n        \n\"display_name\"\n:\n \n\"Zwingli, Huldreich\"\n\n    \n}\n\n\n]\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nInteger\n\n\nInternal id and primary identifier for each topic\n\n\n\n\n\n\ndisplay_name\n\n\nString\n\n\nPrimary name for the topic. Can be changed by hiding, deleting, editing, or preferring names on the topic in question.\n\n\n\n\n\n\n\n\n\n\nTopic Subset\n\n\nThis endpoints allows you to get lists of topics by either starting letter or document. For example:\n\n\n/api/hit/basket/search/?letter=B\n\n\n\n\n\nWill give all topics whose \ndisplay_name\n starts with the letter 'B'.  In order to get all topics that start with a number or symbol, us the '#' sign:\n\n\n/api/hit/basket/search/?letter=#\n\n\n\n\n\nTo get a list of topics in a given document, use:\n\n\n/api/hit/basket/search/?document=DOCUMENT_ID\n\n\n\n\n\nto get the id of a given document, use the \nsources API\n or the editorial interface.  The structure/fields of the response are the same as the \nAll Topics\n endpoint.\n\n\n\n\nTopic Detail\n\n\nGives all data for a single topic, including all names, occurrences, and relations:\n\n\n/api/hit/basket/BASKET_ID\n\n\n\n\n\nExample response\n\n\n{\n\n    \n\"relations\"\n:\n \n[\n\n        \n{\n\n            \n\"id\"\n:\n \n32255\n,\n\n            \n\"relationtype\"\n:\n \n{\n\n                \n\"id\"\n:\n \n6\n,\n\n                \n\"rtype\"\n:\n \n\"Containment\"\n,\n\n                \n\"role_from\"\n:\n \n\"contained by\"\n,\n\n                \n\"role_to\"\n:\n \n\"contains\"\n,\n\n                \n\"symmetrical\"\n:\n \nfalse\n\n            \n},\n\n            \n\"basket\"\n:\n \n{\n\n                \n\"display_name\"\n:\n \n\"games\"\n,\n\n                \n\"id\"\n:\n \n90\n\n            \n},\n\n            \n\"direction\"\n:\n \n\"source\"\n\n        \n},\n\n        \n{\n\n            \n\"id\"\n:\n \n122665\n,\n\n            \n\"relationtype\"\n:\n \n{\n\n                \n\"id\"\n:\n \n4\n,\n\n                \n\"rtype\"\n:\n \n\"Subentry\"\n,\n\n                \n\"role_from\"\n:\n \n\"Main Entry of\"\n,\n\n                \n\"role_to\"\n:\n \n\"Subentry of\"\n,\n\n                \n\"symmetrical\"\n:\n \nfalse\n\n            \n},\n\n            \n\"basket\"\n:\n \n{\n\n                \n\"display_name\"\n:\n \n\"video games -- in science education\"\n,\n\n                \n\"id\"\n:\n \n209\n\n            \n},\n\n            \n\"direction\"\n:\n \n\"destination\"\n\n        \n}\n\n    \n],\n\n    \n\"basket\"\n:\n \n{\n\n        \n\"id\"\n:\n \n7399\n,\n\n        \n\"topic_hits\"\n:\n \n[\n\n            \n{\n\n                \n\"id\"\n:\n \n10210\n,\n\n                \n\"name\"\n:\n \n\"Video game\"\n,\n\n                \n\"scope\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n2\n,\n\n                    \n\"scope\"\n:\n \n\"Generic\"\n\n                \n},\n\n                \n\"bypass\"\n:\n \nfalse\n,\n\n                \n\"hidden\"\n:\n \nfalse\n,\n\n                \n\"preferred\"\n:\n \nfalse\n\n            \n},\n\n            \n{\n\n                \n\"id\"\n:\n \n8758\n,\n\n                \n\"name\"\n:\n \n\"video -- \\\"games\\\"\"\n,\n\n                \n\"scope\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n2\n,\n\n                    \n\"scope\"\n:\n \n\"Generic\"\n\n                \n},\n\n                \n\"bypass\"\n:\n \nfalse\n,\n\n                \n\"hidden\"\n:\n \nfalse\n,\n\n                \n\"preferred\"\n:\n \nfalse\n\n            \n}\n\n        \n],\n\n        \n\"occurs\"\n:\n \n[\n\n            \n{\n\n                \n\"id\"\n:\n \n28663\n,\n\n                \n\"location\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n6418\n,\n\n                    \n\"document\"\n:\n \n{\n\n                        \n\"title\"\n:\n \n\"Making News at The New York Times\"\n,\n\n                        \n\"author\"\n:\n \n\"Usher, Nikki\"\n\n                    \n},\n\n                    \n\"localid\"\n:\n \n\"page_150\"\n\n                \n}\n\n            \n},\n\n            \n{\n\n                \n\"id\"\n:\n \n31986\n,\n\n                \n\"location\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n6907\n,\n\n                    \n\"document\"\n:\n \n{\n\n                        \n\"title\"\n:\n \n\"The Hyperlinked Society: Questioning Connections in the Digital Age\"\n,\n\n                        \n\"author\"\n:\n \n\"Turrow, Joseph; Tsui, Lokman\"\n\n                    \n},\n\n                    \n\"localid\"\n:\n \n\"page_132\"\n\n                \n}\n\n            \n}\n\n        \n],\n\n        \n\"display_name\"\n:\n \n\"video -- \\\"games\\\"\"\n\n    \n}\n\n\n}\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbasket.id\n\n\nInteger\n\n\nSame as the \nid\n in the \nAll Topics\n API enpoint\n\n\n\n\n\n\nbasket.display_name\n\n\nString\n\n\nSame as the \ndisplay_name\n in the \nAll Topics\n API endpoint\n\n\n\n\n\n\nbasket.topic_hits\n\n\nList\n\n\nList of names on the topic\n\n\n\n\n\n\nbasket.topic_hits[...].id\n\n\nInteger\n\n\nInternal id of that particular name. Like the Topic ID, it's stable within a database, but not guaranteed to be consistent across databases or re-ingests\n\n\n\n\n\n\nbasket.topic_hits[...].name\n\n\nString\n\n\nName string of a single topic name\n\n\n\n\n\n\nbasket.topic_hits[...].scope.id\n\n\nInteger\n\n\nInternal ID of the scope\n\n\n\n\n\n\nbasket.topic_hits[...].scope/scope\n\n\nString\n\n\nString/text representation of the scope of that name.  Default scope is \"Generic\"\n\n\n\n\n\n\nbasket.topic_hits[...].bypass\n\n\nBoolean\n\n\nIf set to True, this prevents a name from being reprocessed when re-ingesting material. Used for certain kinds of automatic processing, but it's not used in the current iteration of \nEnhanced Network Monographs\n\n\n\n\n\n\nbasket.topic_hits[...].hidden\n\n\nBoolean\n\n\nIf set to True, this name is saved on a topic but is not displayed in output.  Not currrently used in this iteration of \nEnhanced Network Monographs\n\n\n\n\n\n\nbasket.topic_hits[...].preferred\n\n\nBoolean\n\n\nIndicates whether this hit should be used for the current topics \ndisplay_name\n. If not name as \npreferred=True\n, then the longest name will be used as the \ndisplay_name\n for that topic\n\n\n\n\n\n\nbasket.occurs\n\n\nList\n\n\nList of all occurrences of a given topic\n\n\n\n\n\n\nbasket.occurs[...].id\n\n\nInteger\n\n\nInternal ID of the occurrence\n\n\n\n\n\n\nbasket.occurs[...].location\n\n\nDict\n\n\nInformation on the original location (in this case, the particular book/page) of the occurrence\n\n\n\n\n\n\nbasket.occurs[...].location.id\n\n\nInteger\n\n\nInternal ID of that page\n\n\n\n\n\n\nbasket.occurs[...].location.document.title\n\n\nString\n\n\nTitle of the original source that this occurrence is in\n\n\n\n\n\n\nbasket.occurs[...].location.document.author\n\n\nString\n\n\nAuthor of the original source that this occurrence is in\n\n\n\n\n\n\nbasket.occurs[...].location.localid\n\n\nString\n\n\nIdentifier for this particular location (relative to the document).  This \nis\n guaranteed to be stable across ingests\n\n\n\n\n\n\nrelations\n\n\nList\n\n\nList/Description of all Related Topics\n\n\n\n\n\n\nrelations[...].ids\n\n\nInteger\n\n\nInternal ID of this particular relation\n\n\n\n\n\n\nrelations[...].basket.id\n\n\nInteger\n\n\nID of the Related Topic\n\n\n\n\n\n\nrelations[...].basket.display_name\n\n\nString\n\n\ndisplay_name\n of the Related Topic\n\n\n\n\n\n\nrelations[...].relationtype.rtype\n\n\nString\n\n\nDescription of the \nkind\n of relation between this topic and the Related Topic\n\n\n\n\n\n\nrelations[...].relationtype.id\n\n\nInteger\n\n\nInternal ID of this particular RelationType\n\n\n\n\n\n\nrelations[...].relationtype/role_from\n\n\nString\n\n\nDescription of the role from the source topic to the destination topic. E.g. for a \"parent\" relationship this might be \"parent of\"\n\n\n\n\n\n\nrelations[...].relationtype/role_to\n\n\nString\n\n\nDescription of the from the destination topic to the source topic.  E.g. for a \"parent\" relationship this might be \"child of\"\n\n\n\n\n\n\nrelations[...].relationtype/symmetrical\n\n\nBoolean\n\n\nIndicates whether or not this RelationType is symmetrical.  Another way of saying that \"role_to\" and \"role_form\" (described above) are equivalent.\n\n\n\n\n\n\nrelations[...].direction\n\n\nString\n\n\nDescribes whether the current topic is the \"source\" (e.g. uses the \"role_to\" description above) or the \"destination\" (e.g. uses the \"role_from\" description above) of the given relationship. Important for noting the directionality of non-symmetrical relationships\n\n\n\n\n\n\n\n\n\n\nTopics With Review\n\n\nSimilar to the \nAll Topics\n API Endpoint, except that it also includes information on whether or not the topic has been reviewed (and by whom):\n\n\n/api/review/basket/all/\n\n\n\n\n\nExample Response\n\n\n[\n\n    \n{\n\n        \n\"id\"\n:\n \n3037\n,\n\n        \n\"display_name\"\n:\n \n\"17 U.S.C. \u00a7120(a)\"\n,\n\n        \n\"review\"\n:\n \n{\n\n            \n\"reviewer\"\n:\n \nnull\n,\n\n            \n\"time\"\n:\n \nnull\n,\n\n            \n\"reviewed\"\n:\n \nfalse\n,\n\n            \n\"changed\"\n:\n \nfalse\n\n        \n}\n\n    \n},\n\n    \n{\n\n        \n\"id\"\n:\n \n30823\n,\n\n        \n\"display_name\"\n:\n \n\"1950s\"\n,\n\n        \n\"review\"\n:\n \n{\n\n            \n\"reviewer\"\n:\n \nnull\n,\n\n            \n\"time\"\n:\n \nnull\n,\n\n            \n\"reviewed\"\n:\n \nfalse\n,\n\n            \n\"changed\"\n:\n \nfalse\n\n        \n}\n\n    \n},\n\n    \n...\n\n   \n{\n\n        \n\"id\"\n:\n \n25992\n,\n\n        \n\"display_name\"\n:\n \n\"Zwingli, Huldreich\"\n,\n\n        \n\"review\"\n:\n \n{\n\n            \n\"reviewer\"\n:\n \n\"Alex\"\n,\n\n            \n\"time\"\n:\n \n\"2017-01-05T21:16:03.377185Z\"\n,\n\n            \n\"reviewed\"\n:\n \ntrue\n,\n\n            \n\"changed\"\n:\n \nfalse\n\n        \n}\n\n    \n}\n\n\n]\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nInteger\n\n\nInternal id and primary identifier for each topic\n\n\n\n\n\n\ndisplay_name\n\n\nString\n\n\nPrimary name for the topic. Can be changed by hiding, deleting, editing, or preferring names on the topic in question.\n\n\n\n\n\n\nreview.reviewer\n\n\nString\n\n\nUsername of person who last changed the review status of topic\n\n\n\n\n\n\nreview.time\n\n\nString\n\n\nDate/Time of last change of review status, in UTC format\n\n\n\n\n\n\nreview.reviewed\n\n\nBoolean\n\n\nWhether or not the topic was reviewed\n\n\n\n\n\n\nreview.changed\n\n\nBoolean\n\n\nWhether the topic was changed (if reviewed)\n\n\n\n\n\n\n\n\n\n\nReviewed Topic Subset\n\n\nProvides the same subsets of topics as the \nregular Topic Subset\n list, except also includes review information. Query string parameters work exactly the same way -- for example, requesting all topics that start with letter 'D' (along with their review status) would be:\n\n\n/api/review/basket/search/?letter=D\n\n\n\n\n\nField data is exactly the same as the \nAll Topics with Reviewed Data\n API endpoint\n\n\n\n\nAll Names\n\n\nReturns a list of all names in the database:\n\n\n/api/hit/hits/all/\n\n\n\n\n\nExample Response\n\n\n[\n\n    \n{\n\n        \n\"name\"\n:\n \n\"10 Percent\"\n,\n\n        \n\"basket\"\n:\n \n38574\n,\n\n        \n\"scope\"\n:\n \n\"Generic\"\n,\n\n        \n\"preferred\"\n:\n \nfalse\n,\n\n        \n\"hidden\"\n:\n \nfalse\n,\n\n        \n\"id\"\n:\n \n40302\n\n    \n},\n\n    \n{\n\n        \n\"name\"\n:\n \n\"17 U.S.C. \u00a7120(a)\"\n,\n\n        \n\"basket\"\n:\n \n3037\n,\n\n        \n\"scope\"\n:\n \n\"Generic\"\n,\n\n        \n\"preferred\"\n:\n \nfalse\n,\n\n        \n\"hidden\"\n:\n \nfalse\n,\n\n        \n\"id\"\n:\n \n3109\n\n    \n},\n\n    \n...\n\n    \n{\n\n        \n\"name\"\n:\n \n\"Zwingli, Huldreich\"\n,\n\n        \n\"basket\"\n:\n \n25992\n,\n\n        \n\"scope\"\n:\n \n\"Generic\"\n,\n\n        \n\"preferred\"\n:\n \nfalse\n,\n\n        \n\"hidden\"\n:\n \nfalse\n,\n\n        \n\"id\"\n:\n \n26982\n\n    \n}\n\n\n]\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nfull, human-readable name\n\n\n\n\n\n\nbasket\n\n\nInteger\n\n\nID of the topic that this name is attached to\n\n\n\n\n\n\nscope\n\n\nString\n\n\nscope name of the name\n\n\n\n\n\n\npreferred\n\n\nBoolean\n\n\nIndicates whether this is the preferred name of its topic\n\n\n\n\n\n\nhidden\n\n\nBoolean\n\n\nIndicates whether the name is hidden\n\n\n\n\n\n\nid\n\n\nInteger\n\n\nInternal ID of the name\n\n\n\n\n\n\n\n\n\n\nNames Subset\n\n\nGet a list of names by certain characteristics, including starting letter, containing a search term, filtered by type, or filtered by scope.  This works very similar to the filtering \nby topic\n, so getting all names that start with a number or symbol would be:\n\n\n/api/hit/hits/search/?letter=#\n\n\n\n\n\nHowever, the names filtering also includes a few additional options, including finding any case-insensitive substring within the name. For example, the query\n\n\n/api/hit/hists/search/?name=\"adams\"\n\n\n\n\n\nWould include all names that contain \nadams\n, whether or not it was at the begining (e.g. it would return both \nHenry Adams\n and \nadams apple\n).\n\n\n\n\nNote\n\n\nIn its current iteration, this endpoint requires exact string matches.  So while the above request would include \nadams apple\n, it would \nnot\n return \nadam's apple\n, due to the apostrophe preventing the exact string match.  \n\n\n\n\nThe Names Subset enpoints can also filter names by scope, so any name with a given scope can be found with \n\n\n/api/hit/hits/search/?scope=SCOPE_ID\n\n\n\n\n\nWhere \nSCOPE_ID\n is the internal id of the given scope.  It's also worth noting that these various filters can be chained together, so the API query\n\n\n/api/hit/hits/search/?letter=A&name=justice\n\n\n\n\n\nWould return all names that start with the letter A and contains the (case-insensitive) string \"justice\".\n\n\nFor the structure of the response, see the \nAll Names\n API endpoint.",
            "title": "Topics"
        },
        {
            "location": "/api/topics/#api-overview",
            "text": "Description  Endpoint  Extra Parameters      List of All Topics  /api/hit/basket/all/     List of Subset of Topics  /api/hit/basket/search/  letter, document    Topic Detail  /api/hit/basket/BASKET_ID/     All Topics (with review data)  /api/review/baskets/all     Subset of Topics (with review data)  /api/review/baskets/search  letter, document    List of All Names  /api/hit/hits/all/     List of Subset of Names  /api/hit/hits/search/  name, letter, scope, ttype      A Note on Terminology  You may notice the terms  basket  and  hit  a lot on this page.  Internally, this is how our topic mapping software refers to  topics  and  names , respectively.  In almost all cases, mentally replacing  basket  with  topic  and  hit  with  name  will work perfectly.",
            "title": "API Overview"
        },
        {
            "location": "/api/topics/#all-topics",
            "text": "Gives a list of all topics in the system:  /api/hit/basket/all/",
            "title": "All Topics"
        },
        {
            "location": "/api/topics/#example-response",
            "text": "[ \n     { \n         \"id\" :   3037 , \n         \"display_name\" :   \"17 U.S.C. \u00a7120(a)\" \n     }, \n     { \n         \"id\" :   30823 , \n         \"display_name\" :   \"1950s\" \n     }, \n     ... \n     { \n         \"id\" :   22291 , \n         \"display_name\" :   \"Zwerdling, Alex\" \n     }, \n     { \n         \"id\" :   25992 , \n         \"display_name\" :   \"Zwingli, Huldreich\" \n     }  ]",
            "title": "Example response"
        },
        {
            "location": "/api/topics/#field-descriptions",
            "text": "Field  Type  Description      id  Integer  Internal id and primary identifier for each topic    display_name  String  Primary name for the topic. Can be changed by hiding, deleting, editing, or preferring names on the topic in question.",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/topics/#topic-subset",
            "text": "This endpoints allows you to get lists of topics by either starting letter or document. For example:  /api/hit/basket/search/?letter=B  Will give all topics whose  display_name  starts with the letter 'B'.  In order to get all topics that start with a number or symbol, us the '#' sign:  /api/hit/basket/search/?letter=#  To get a list of topics in a given document, use:  /api/hit/basket/search/?document=DOCUMENT_ID  to get the id of a given document, use the  sources API  or the editorial interface.  The structure/fields of the response are the same as the  All Topics  endpoint.",
            "title": "Topic Subset"
        },
        {
            "location": "/api/topics/#topic-detail",
            "text": "Gives all data for a single topic, including all names, occurrences, and relations:  /api/hit/basket/BASKET_ID",
            "title": "Topic Detail"
        },
        {
            "location": "/api/topics/#example-response_1",
            "text": "{ \n     \"relations\" :   [ \n         { \n             \"id\" :   32255 , \n             \"relationtype\" :   { \n                 \"id\" :   6 , \n                 \"rtype\" :   \"Containment\" , \n                 \"role_from\" :   \"contained by\" , \n                 \"role_to\" :   \"contains\" , \n                 \"symmetrical\" :   false \n             }, \n             \"basket\" :   { \n                 \"display_name\" :   \"games\" , \n                 \"id\" :   90 \n             }, \n             \"direction\" :   \"source\" \n         }, \n         { \n             \"id\" :   122665 , \n             \"relationtype\" :   { \n                 \"id\" :   4 , \n                 \"rtype\" :   \"Subentry\" , \n                 \"role_from\" :   \"Main Entry of\" , \n                 \"role_to\" :   \"Subentry of\" , \n                 \"symmetrical\" :   false \n             }, \n             \"basket\" :   { \n                 \"display_name\" :   \"video games -- in science education\" , \n                 \"id\" :   209 \n             }, \n             \"direction\" :   \"destination\" \n         } \n     ], \n     \"basket\" :   { \n         \"id\" :   7399 , \n         \"topic_hits\" :   [ \n             { \n                 \"id\" :   10210 , \n                 \"name\" :   \"Video game\" , \n                 \"scope\" :   { \n                     \"id\" :   2 , \n                     \"scope\" :   \"Generic\" \n                 }, \n                 \"bypass\" :   false , \n                 \"hidden\" :   false , \n                 \"preferred\" :   false \n             }, \n             { \n                 \"id\" :   8758 , \n                 \"name\" :   \"video -- \\\"games\\\"\" , \n                 \"scope\" :   { \n                     \"id\" :   2 , \n                     \"scope\" :   \"Generic\" \n                 }, \n                 \"bypass\" :   false , \n                 \"hidden\" :   false , \n                 \"preferred\" :   false \n             } \n         ], \n         \"occurs\" :   [ \n             { \n                 \"id\" :   28663 , \n                 \"location\" :   { \n                     \"id\" :   6418 , \n                     \"document\" :   { \n                         \"title\" :   \"Making News at The New York Times\" , \n                         \"author\" :   \"Usher, Nikki\" \n                     }, \n                     \"localid\" :   \"page_150\" \n                 } \n             }, \n             { \n                 \"id\" :   31986 , \n                 \"location\" :   { \n                     \"id\" :   6907 , \n                     \"document\" :   { \n                         \"title\" :   \"The Hyperlinked Society: Questioning Connections in the Digital Age\" , \n                         \"author\" :   \"Turrow, Joseph; Tsui, Lokman\" \n                     }, \n                     \"localid\" :   \"page_132\" \n                 } \n             } \n         ], \n         \"display_name\" :   \"video -- \\\"games\\\"\" \n     }  }",
            "title": "Example response"
        },
        {
            "location": "/api/topics/#field-descriptions_1",
            "text": "Field  Type  Description      basket.id  Integer  Same as the  id  in the  All Topics  API enpoint    basket.display_name  String  Same as the  display_name  in the  All Topics  API endpoint    basket.topic_hits  List  List of names on the topic    basket.topic_hits[...].id  Integer  Internal id of that particular name. Like the Topic ID, it's stable within a database, but not guaranteed to be consistent across databases or re-ingests    basket.topic_hits[...].name  String  Name string of a single topic name    basket.topic_hits[...].scope.id  Integer  Internal ID of the scope    basket.topic_hits[...].scope/scope  String  String/text representation of the scope of that name.  Default scope is \"Generic\"    basket.topic_hits[...].bypass  Boolean  If set to True, this prevents a name from being reprocessed when re-ingesting material. Used for certain kinds of automatic processing, but it's not used in the current iteration of  Enhanced Network Monographs    basket.topic_hits[...].hidden  Boolean  If set to True, this name is saved on a topic but is not displayed in output.  Not currrently used in this iteration of  Enhanced Network Monographs    basket.topic_hits[...].preferred  Boolean  Indicates whether this hit should be used for the current topics  display_name . If not name as  preferred=True , then the longest name will be used as the  display_name  for that topic    basket.occurs  List  List of all occurrences of a given topic    basket.occurs[...].id  Integer  Internal ID of the occurrence    basket.occurs[...].location  Dict  Information on the original location (in this case, the particular book/page) of the occurrence    basket.occurs[...].location.id  Integer  Internal ID of that page    basket.occurs[...].location.document.title  String  Title of the original source that this occurrence is in    basket.occurs[...].location.document.author  String  Author of the original source that this occurrence is in    basket.occurs[...].location.localid  String  Identifier for this particular location (relative to the document).  This  is  guaranteed to be stable across ingests    relations  List  List/Description of all Related Topics    relations[...].ids  Integer  Internal ID of this particular relation    relations[...].basket.id  Integer  ID of the Related Topic    relations[...].basket.display_name  String  display_name  of the Related Topic    relations[...].relationtype.rtype  String  Description of the  kind  of relation between this topic and the Related Topic    relations[...].relationtype.id  Integer  Internal ID of this particular RelationType    relations[...].relationtype/role_from  String  Description of the role from the source topic to the destination topic. E.g. for a \"parent\" relationship this might be \"parent of\"    relations[...].relationtype/role_to  String  Description of the from the destination topic to the source topic.  E.g. for a \"parent\" relationship this might be \"child of\"    relations[...].relationtype/symmetrical  Boolean  Indicates whether or not this RelationType is symmetrical.  Another way of saying that \"role_to\" and \"role_form\" (described above) are equivalent.    relations[...].direction  String  Describes whether the current topic is the \"source\" (e.g. uses the \"role_to\" description above) or the \"destination\" (e.g. uses the \"role_from\" description above) of the given relationship. Important for noting the directionality of non-symmetrical relationships",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/topics/#topics-with-review",
            "text": "Similar to the  All Topics  API Endpoint, except that it also includes information on whether or not the topic has been reviewed (and by whom):  /api/review/basket/all/",
            "title": "Topics With Review"
        },
        {
            "location": "/api/topics/#example-response_2",
            "text": "[ \n     { \n         \"id\" :   3037 , \n         \"display_name\" :   \"17 U.S.C. \u00a7120(a)\" , \n         \"review\" :   { \n             \"reviewer\" :   null , \n             \"time\" :   null , \n             \"reviewed\" :   false , \n             \"changed\" :   false \n         } \n     }, \n     { \n         \"id\" :   30823 , \n         \"display_name\" :   \"1950s\" , \n         \"review\" :   { \n             \"reviewer\" :   null , \n             \"time\" :   null , \n             \"reviewed\" :   false , \n             \"changed\" :   false \n         } \n     }, \n     ... \n    { \n         \"id\" :   25992 , \n         \"display_name\" :   \"Zwingli, Huldreich\" , \n         \"review\" :   { \n             \"reviewer\" :   \"Alex\" , \n             \"time\" :   \"2017-01-05T21:16:03.377185Z\" , \n             \"reviewed\" :   true , \n             \"changed\" :   false \n         } \n     }  ]",
            "title": "Example Response"
        },
        {
            "location": "/api/topics/#field-descriptions_2",
            "text": "Field  Type  Description      id  Integer  Internal id and primary identifier for each topic    display_name  String  Primary name for the topic. Can be changed by hiding, deleting, editing, or preferring names on the topic in question.    review.reviewer  String  Username of person who last changed the review status of topic    review.time  String  Date/Time of last change of review status, in UTC format    review.reviewed  Boolean  Whether or not the topic was reviewed    review.changed  Boolean  Whether the topic was changed (if reviewed)",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/topics/#reviewed-topic-subset",
            "text": "Provides the same subsets of topics as the  regular Topic Subset  list, except also includes review information. Query string parameters work exactly the same way -- for example, requesting all topics that start with letter 'D' (along with their review status) would be:  /api/review/basket/search/?letter=D  Field data is exactly the same as the  All Topics with Reviewed Data  API endpoint",
            "title": "Reviewed Topic Subset"
        },
        {
            "location": "/api/topics/#all-names",
            "text": "Returns a list of all names in the database:  /api/hit/hits/all/",
            "title": "All Names"
        },
        {
            "location": "/api/topics/#example-response_3",
            "text": "[ \n     { \n         \"name\" :   \"10 Percent\" , \n         \"basket\" :   38574 , \n         \"scope\" :   \"Generic\" , \n         \"preferred\" :   false , \n         \"hidden\" :   false , \n         \"id\" :   40302 \n     }, \n     { \n         \"name\" :   \"17 U.S.C. \u00a7120(a)\" , \n         \"basket\" :   3037 , \n         \"scope\" :   \"Generic\" , \n         \"preferred\" :   false , \n         \"hidden\" :   false , \n         \"id\" :   3109 \n     }, \n     ... \n     { \n         \"name\" :   \"Zwingli, Huldreich\" , \n         \"basket\" :   25992 , \n         \"scope\" :   \"Generic\" , \n         \"preferred\" :   false , \n         \"hidden\" :   false , \n         \"id\" :   26982 \n     }  ]",
            "title": "Example Response"
        },
        {
            "location": "/api/topics/#field-descriptions_3",
            "text": "Field  Type  Description      name  String  full, human-readable name    basket  Integer  ID of the topic that this name is attached to    scope  String  scope name of the name    preferred  Boolean  Indicates whether this is the preferred name of its topic    hidden  Boolean  Indicates whether the name is hidden    id  Integer  Internal ID of the name",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/topics/#names-subset",
            "text": "Get a list of names by certain characteristics, including starting letter, containing a search term, filtered by type, or filtered by scope.  This works very similar to the filtering  by topic , so getting all names that start with a number or symbol would be:  /api/hit/hits/search/?letter=#  However, the names filtering also includes a few additional options, including finding any case-insensitive substring within the name. For example, the query  /api/hit/hists/search/?name=\"adams\"  Would include all names that contain  adams , whether or not it was at the begining (e.g. it would return both  Henry Adams  and  adams apple ).   Note  In its current iteration, this endpoint requires exact string matches.  So while the above request would include  adams apple , it would  not  return  adam's apple , due to the apostrophe preventing the exact string match.     The Names Subset enpoints can also filter names by scope, so any name with a given scope can be found with   /api/hit/hits/search/?scope=SCOPE_ID  Where  SCOPE_ID  is the internal id of the given scope.  It's also worth noting that these various filters can be chained together, so the API query  /api/hit/hits/search/?letter=A&name=justice  Would return all names that start with the letter A and contains the (case-insensitive) string \"justice\".  For the structure of the response, see the  All Names  API endpoint.",
            "title": "Names Subset"
        },
        {
            "location": "/api/sources/",
            "text": "Sources API Overview\n\n\n\n\n\n\n\n\nDescription\n\n\nEndpoint\n\n\nExtra Parameters\n\n\n\n\n\n\n\n\n\n\nList of All Epubs\n\n\n/api/epub/document/all/\n\n\n\n\n\n\n\n\nEpub Detail\n\n\n/api/epub/document/DOCUMENT_ID/\n\n\nwithOccurrences\n\n\n\n\n\n\nSingle Page\n\n\n/api/epub/location/DOCUMENT_ID/\n\n\n\n\n\n\n\n\nList of All Indexpatterns\n\n\n/api/epub/index-pattern/all/\n\n\n\n\n\n\n\n\n\n\n\n\nAll Epubs\n\n\nLists all epubs in the system.  Note that this includes any epub in the system that has no index (and therefore no topics) or no page marker indicators in the original text (and therefore no pages in our system).\n\n\n/api/epub/document/all/\n\n\n\n\n\nExample Response\n\n\n[\n\n    \n{\n\n        \n\"title\"\n:\n \n\"Black Rage Confronts the Law\"\n,\n\n        \n\"author\"\n:\n \n\"Paul Harris\"\n,\n\n        \n\"publisher\"\n:\n \n\"New York University\"\n,\n\n        \n\"id\"\n:\n \n95\n,\n\n        \n\"isbn\"\n:\n \n\"9780814735923\"\n\n    \n},\n\n    \n{\n\n        \n\"title\"\n:\n \n\"Negrophobia and Reasonable Racism\"\n,\n\n        \n\"author\"\n:\n \n\"Jody David Armour\"\n,\n\n        \n\"publisher\"\n:\n \n\"New york University Press\"\n,\n\n        \n\"id\"\n:\n \n67\n,\n\n        \n\"isbn\"\n:\n \n\"9780814706404\"\n\n    \n},\n\n    \n...\n\n    \n{\n\n        \n\"title\"\n:\n \n\"Teaching What You\u2019re Not\"\n,\n\n        \n\"author\"\n:\n \n\"Katherine J. Mayberry\"\n,\n\n        \n\"publisher\"\n:\n \n\"York University Press\"\n,\n\n        \n\"id\"\n:\n \n88\n,\n\n        \n\"isbn\"\n:\n \n\"9780814755471\"\n\n    \n}\n\n\n]\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nInteger\n\n\nInternal id and primary identifier for each epub.\n\n\n\n\n\n\ntitle\n\n\nString\n\n\nTitle of the Epub\n\n\n\n\n\n\nauthor\n\n\nString\n\n\nAuthor of the Epub\n\n\n\n\n\n\npublisher\n\n\nString\n\n\nPublisher of the epub.  Note that this information is extracted from the text itself, and may not be exact string matches across epubs for any given publisher (as you can see in the example above, which has three different ways of referring to NYU Press)\n\n\n\n\n\n\nisbn\n\n\nString\n\n\nISBN number for the book. Note that this is extracted from the epub filename, not extracted from any metadata from the book itself. Be aware of this limitation in future ingests\n\n\n\n\n\n\n\n\n\n\nEpub Detail\n\n\nLists all Pages in a given Epub.\n\n\n/api/epub/document/DOCUMENT_ID/\n\n\n\n\n\nFor expanded location information, you can set the query parameter \nwithOccurrences\n to \nTrue\n:\n\n\n/api/epub/document/DOCUMENT_ID/?withOccurrences=True\n\n\n\n\n\nThat will give expanded location information, including occurrences and pagenumbers. The location data for this response is identical to that from the \nLocation Detail\n, just as an array of every page for that particular book. Refer to the \nsingle page\n endpoint for a description of the response structure and fields.  \n\n\nExample Response\n\n\n{\n\n    \n\"title\"\n:\n \n\"Originality, Imitation, and Plagiarism\"\n,\n\n    \n\"author\"\n:\n \n\"Eisner, Caroline; Vicinus, Martha\"\n,\n\n    \n\"id\"\n:\n \n12\n,\n\n    \n\"publisher\"\n:\n \n\"University of Michigan Press and University of Michigan Library\"\n,\n\n    \n\"isbn\"\n:\n \n\"9780472024445\"\n,\n\n    \n\"locations\"\n:\n \n[\n\n        \n{\n\n            \n\"id\"\n:\n \n2220\n,\n\n            \n\"localid\"\n:\n \n\"page_i\"\n,\n\n            \n\"sequence_number\"\n:\n \n1\n,\n\n            \n\"content\"\n:\n \n\"\"\n\n        \n},\n\n        \n{\n\n            \n\"id\"\n:\n \n2221\n,\n\n            \n\"localid\"\n:\n \n\"page_ii\"\n,\n\n            \n\"sequence_number\"\n:\n \n2\n,\n\n            \n\"content\"\n:\n \n\"\"\n\n        \n},\n\n        \n...\n\n        \n{\n\n            \n\"id\"\n:\n \n2495\n,\n\n            \n\"localid\"\n:\n \n\"page_268\"\n,\n\n            \n\"sequence_number\"\n:\n \n276\n,\n\n            \n\"content\"\n:\n \n\"\\nSony Corp of America v. Universal Studios, Inc., 149, 150, 154\\nSouter, David H., 150\\nSponsoring Con...\"\n\n        \n},\n\n        \n{\n\n            \n\"id\"\n:\n \n2496\n,\n\n            \n\"localid\"\n:\n \n\"page_269\"\n,\n\n            \n\"sequence_number\"\n:\n \n277\n,\n\n            \n\"content\"\n:\n \n\"\\nWikiWikiWeb, 45n1\\nWimmer, Warren, 66, 67\\nWinter, Richard, 183\\nWollheim, Richard, 117\\nWoodmansee, Ma...\"\n\n        \n}\n\n    \n]\n\n\n}\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nInteger\n\n\nInternal id and primary identifier for each epub\n\n\n\n\n\n\ntitle\n\n\nString\n\n\nTitle of the Epub\n\n\n\n\n\n\nauthor\n\n\nString\n\n\nAuthor of the Epub\n\n\n\n\n\n\nepub\n\n\nString\n\n\nPublisher of the epub. See \nAll Epubs\n for note about consistency.\n\n\n\n\n\n\nisbn\n\n\nString\n\n\nISBN number for the book. See \nAll Epubs\n for note about sourcing.\n\n\n\n\n\n\nlocations[...].id\n\n\nInteger\n\n\nInternal id and primary identifier for each page. Usual caveats regarding IDs apply\n\n\n\n\n\n\nlocations[...].localid\n\n\nString\n\n\nHuman-readable representation of the page number\n\n\n\n\n\n\nlocations[...].sequence_number\n\n\nInteger\n\n\nNumber used for properly ordering pages in a book\n\n\n\n\n\n\nlocations[...].content\n\n\nString\n\n\nExcerpt of the content from the page (roughly the first 100 characters)\n\n\n\n\n\n\n\n\n\n\nSingle Page\n\n\nContents information on a single page, including the pages full textual content and all occurrences at that particular page.\n\n\n/api/epub/location/LOCATION_ID/\n\n\n\n\n\nExample Response\n\n\n[\n\n    \n{\n\n        \n\"id\"\n:\n \n2410\n,\n\n        \n\"content\"\n:\n \n{\n\n            \n\"content_unique_indicator\"\n:\n \n\"12-page_183\"\n,\n\n            \n\"content_descriptor\"\n:\n \n\"page 183\"\n,\n\n            \n\"text\"\n:\n \n\"Plagiarism, a Turnitin Trial, and an Experience of Cultural Disorientation\\nLisa Emerson\\nIn October 2003, all faculty at Massey University, a research university in New Zealand, were invited to join a university-wide trial of Turnitin.com, a plagiarism detection system being considered for widespread use to combat a perceived \u201cplagiarism epidemic.\u201d The university framed the Turnitin trial as an investigation into issues of academic integrity and a step in strengthening academic misconduct procedures, with no reference to plagiarism as an issue of academic writing. This is not, perhaps, surprising since rhetoric and composition is an emerging discipline in New Zealand and is not yet fully established as part of the curriculum. As the only full-time faculty member employed at this time to teach academic writing at the university, I joined the trial, hoping to bring a different perspective on the issue.\\nThe purpose of this essay is to consider the value of Turnitin primarily from the context of reflecting, as a writing teacher, on what the trial taught me about writing, about my role as a writing teacher, about students and learning, and on the gaps that exist in our understanding of and relationship with one another in the student-teacher relationship. To deepen my reflection, I have used a form of reflective practice established by Donald Sch\u00f6n and developed by the British school of action research (see, for example, Whitehead and McNiff). This reflective paradigm, as described by Richard Winter, Alyson Buck, and Paula Sobiechowska, \u201crequires more than observation. It requires us to engage in a process of introspection leading to self-clarification\u201d (186). This essay summarizes the process of observation and self-clarification I engaged in as part of the university trial.\\n\"\n\n        \n},\n\n        \n\"document\"\n:\n \n{\n\n            \n\"title\"\n:\n \n\"Originality, Imitation, and Plagiarism\"\n,\n\n            \n\"author\"\n:\n \n\"Eisner, Caroline; Vicinus, Martha\"\n,\n\n            \n\"publisher\"\n:\n \n\"University of Michigan Press and University of Michigan Library\"\n,\n\n            \n\"id\"\n:\n \n12\n,\n\n            \n\"isbn\"\n:\n \n\"9780472024445\"\n\n        \n},\n\n        \n\"context\"\n:\n \nnull\n,\n\n        \n\"occurrences\"\n:\n \n[\n\n            \n{\n\n                \n\"basket\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n2559\n,\n\n                    \n\"display_name\"\n:\n \n\"Buck, Alyson\"\n\n                \n},\n\n                \n\"id\"\n:\n \n8591\n,\n\n                \n\"ring_next\"\n:\n \nnull\n,\n\n                \n\"ring_prev\"\n:\n \nnull\n\n            \n},\n\n            \n{\n\n                \n\"basket\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n2859\n,\n\n                    \n\"display_name\"\n:\n \n\"Massey University\"\n\n                \n},\n\n                \n\"id\"\n:\n \n9409\n,\n\n                \n\"ring_next\"\n:\n \n2419\n,\n\n                \n\"ring_prev\"\n:\n \n2419\n\n            \n},\n\n            \n...\n\n            \n{\n\n                \n\"basket\"\n:\n \n{\n\n                    \n\"id\"\n:\n \n3118\n,\n\n                    \n\"display_name\"\n:\n \n\"Winter, Richard\"\n\n                \n},\n\n                \n\"id\"\n:\n \n10083\n,\n\n                \n\"ring_next\"\n:\n \nnull\n,\n\n                \n\"ring_prev\"\n:\n \nnull\n\n            \n}\n\n        \n],\n\n        \n\"pagenumber\"\n:\n \n{\n\n            \n\"filepath\"\n:\n \n\"OEBPS/24_chap16.xhtml\"\n,\n\n            \n\"pagenumber_tag\"\n:\n \n\"<a id=\\\"page_183\\\">\"\n,\n\n            \n\"css_selector\"\n:\n \n\"#page_183\"\n,\n\n            \n\"xpath\"\n:\n \n\"a[@id=\\\"page_183\\\"]\"\n\n        \n},\n\n        \n\"localid\"\n:\n \n\"page_183\"\n,\n\n        \n\"next_location_id\"\n:\n \n2411\n,\n\n        \n\"previous_location_id\"\n:\n \n2409\n\n    \n}\n\n\n]\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nInteger\n\n\nInternal id and primary identifier of this page\n\n\n\n\n\n\ncontent.content_unique_indicator\n\n\nString\n\n\nHuman readable identifier of this content block. Usually a combination of the Epub's internal ID and the Page's 'localid'.  Used internally for deduplication.\n\n\n\n\n\n\ncontent.content_descriptor\n\n\nString\n\n\nHuman readable description of the content's location\n\n\n\n\n\n\ncontent.text\n\n\nString\n\n\nFull text of the page\n\n\n\n\n\n\ndocument.id\n\n\nInteger\n\n\nInternal id and primary identifier for each epub\n\n\n\n\n\n\ndocument.title\n\n\nString\n\n\nTitle of the Epub\n\n\n\n\n\n\ndocument.author\n\n\nString\n\n\nAuthor of the Epub\n\n\n\n\n\n\ndocument.epub\n\n\nString\n\n\nPublisher of the epub. See \nAll Epubs\n for note about consistency.\n\n\n\n\n\n\ndocument.isbn\n\n\nString\n\n\nISBN number for the book. See \nAll Epubs\n for note about sourcing.\n\n\n\n\n\n\ncontext\n\n\nString\n\n\nNot used in Enhanced Network Monographs\n\n\n\n\n\n\noccurrences\n\n\nList\n\n\nAll the topics on this page\n\n\n\n\n\n\noccurrences[...].id\n\n\nInteger\n\n\nInternal id for this occurrence\n\n\n\n\n\n\noccurrences[...].basket.id\n\n\nInteger\n\n\nInternal id for this topic\n\n\n\n\n\n\noccurrences[...].basket.display_name\n\n\nInteger\n\n\ndisplay_name for given topic. See \nAll Topics\n for more information\n\n\n\n\n\n\noccurrences[...].ring_next\n\n\nInteger\n\n\nLocation ID (i.e. internal id of the page) of the next occurrence of this topic.  If \nnull\n, then this is the only instance of this topic\n\n\n\n\n\n\noccurrences[...].ring_previous\n\n\nInteger\n\n\nLocation ID (i.e. internal id of the page) of the previous occurrence of this topic.  If \nnull\n, then this is the only instance of this topic\n\n\n\n\n\n\npagenumber.filepath\n\n\nString\n\n\nLocation of the specific xml file in which this location is found, relative to the root folder of the unzipped epub\n\n\n\n\n\n\npagenumber.pagenumber_tag\n\n\nString\n\n\nReconstructed pagenumber identifier tag as it appears in the epub\n\n\n\n\n\n\npagenumber.css_selector\n\n\nString\n\n\nCSS Selector for finding the location within the original xml file\n\n\n\n\n\n\npagenumber.xpath\n\n\nString\n\n\nxpath for finding the location within the original xml file\n\n\n\n\n\n\nlocalid\n\n\nString\n\n\nHuman-readable representation of the page number\n\n\n\n\n\n\nnext_location_id\n\n\nInteger\n\n\nId of the next location (page) in this epub\n\n\n\n\n\n\nprevious_location_id\n\n\nInteger\n\n\nId of the previous location (page) in this epub\n\n\n\n\n\n\n\n\n\n\nAll IndexPatterns\n\n\nA list of all IndexPattern objects. Indexpatterns are primarily used for extraction, but are also used for conforming the \nlocalid\n attribute (which is essentially just a stored pagenumber) to the css selectors/xpath/tag necessary for finding the location in the original epub file.\n\n\n/api/epub/index-pattern/all/\n\n\n\n\n\nExample Response\n\n\n[\n\n    \n{\n\n        \n\"name\"\n:\n \n\"nyup1\"\n,\n\n        \n\"description\"\n:\n \n\"NYUP as of Spring 2015\"\n,\n\n        \n\"pagenumber_pre_strings\"\n:\n \n[\n\n            \n\"id=\\\"page_\"\n\n        \n],\n\n        \n\"pagenumber_css_selector_pattern\"\n:\n \n\"#page_{}\"\n,\n\n        \n\"pagenumber_xpath_pattern\"\n:\n \n\"a[@id=\\\"page_{}\\\"]\"\n,\n\n        \n\"xpath_entry\"\n:\n \n\"p[@class='indexmain' or @class='indexmain1']\"\n,\n\n        \n\"see_split_strings\"\n:\n \n[\n\n            \n\". See\"\n,\n\n            \n\", See\"\n,\n\n            \n\", see\"\n,\n\n            \n\"(see\"\n\n        \n],\n\n        \n\"see_also_split_strings\"\n:\n \n[\n\n            \n\", See also\"\n,\n\n            \n\". See also\"\n,\n\n            \n\"See also\"\n,\n\n            \n\" see also\"\n,\n\n            \n\", also\"\n,\n\n            \n\"(see also\"\n\n        \n],\n\n        \n\"xpath_see\"\n:\n \n\"em\"\n,\n\n        \n\"xpath_seealso\"\n:\n \n\"em\"\n,\n\n        \n\"separator_between_sees\"\n:\n \n\";\"\n,\n\n        \n\"separator_between_seealsos\"\n:\n \n\";\"\n,\n\n        \n\"separator_see_subentry\"\n:\n \n\",\"\n,\n\n        \n\"inline_see_start\"\n:\n \n\"\"\n,\n\n        \n\"inline_see_also_start\"\n:\n \n\"\"\n,\n\n        \n\"inline_see_end\"\n:\n \n\"\"\n,\n\n        \n\"inline_see_also_end\"\n:\n \n\"\"\n,\n\n        \n\"subentry_classes\"\n:\n \n[\n\n            \n\"indexsub\"\n\n        \n],\n\n        \n\"separator_between_subentries\"\n:\n \n\"\"\n,\n\n        \n\"separator_between_entry_and_occurrences\"\n:\n \n\",\"\n,\n\n        \n\"separator_before_first_subentry\"\n:\n \n\":\"\n,\n\n        \n\"xpath_occurrence_link\"\n:\n \n\"a[@href]\"\n,\n\n        \n\"indicators_of_occurrence_range\"\n:\n \n[\n\n            \n\"\u2013\"\n,\n\n            \n\"\u2014\"\n\n        \n],\n\n        \n\"documents\"\n:\n \n[\n\n            \n{\n\n                \n\"title\"\n:\n \n\"Busting the Mob\"\n,\n\n                \n\"id\"\n:\n \n464\n\n            \n},\n\n            \n{\n\n                \n\"title\"\n:\n \n\"The Transformation of Rage\"\n,\n\n                \n\"id\"\n:\n \n465\n\n            \n},\n\n            \n...\n\n            \n{\n\n                \n\"title\"\n:\n \n\"Bird-Self Accumulated\"\n,\n\n                \n\"id\"\n:\n \n463\n\n            \n}\n\n        \n]\n\n    \n},\n\n    \n...\n\n\n]\n\n\n\n\n\n\nField Descriptions\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nUnique string representation of indexpattern. Primary means of fetching a pattern from the database\n\n\n\n\n\n\ndescription\n\n\nString\n\n\nLonger, human-readable text description of the IndexPattern. \nNote:\n Descriptions are \nnot\n guaranteed to be unique by the database, and are merely meant to contain supplemental information.\n\n\n\n\n\n\npagenumber_pre_strings\n\n\nArray (String)\n\n\nWhen locating pagenumbers, this is a list of patterns to look for and split the text on. After this processing is done, the result should be a list of strings with the pagenumber at the beginning of the string, followed by the content of the page. Used for extracting both locations and content from an epub\n\n\n\n\n\n\npagenumber_css_selector_pattern\n\n\nString\n\n\nPattern used to conform a page number (as stored in localid) to a css selector. All patterns must contain \"{}\" where the pagenumber should go, as python string formatting is used to add the pagenumber from any given location\n\n\n\n\n\n\npagenumber_xpath_pattern\n\n\nString\n\n\nPattern used to conform a page number (as stored in localid) to an xpath. All patterns must contain \"{}\" where the pagenumber should go, as python string formatting is used to add the pagenumber from any given location\n\n\n\n\n\n\nxpath_entry\n\n\nString\n\n\nxpath used to locate main entries in the index\n\n\n\n\n\n\nsee_split_strings\n\n\nArray (String)\n\n\nWhen parsing an entry, split on these strings to separate a \"See\" from the main entry (Sees are not always reliably enclosed in tags, and therefore require string processing)\n\n\n\n\n\n\nsee_also_split_strings\n\n\nArray (String)\n\n\nSame as above, but with See Also\n\n\n\n\n\n\nxpath_see\n\n\nString\n\n\nTag generally (but not always) used to enclose a \"See\". Used for locating \"see\" objects in inline subentry index entries.\n\n\n\n\n\n\nxpath_see_also\n\n\nString\n\n\nSame as above, but with See Also\n\n\n\n\n\n\nseparator_between_sees\n\n\nString\n\n\nWhen an entry has multiple See references, this is the character used to separate them.  For example, in the entry \nClinton, William. See Clinton, Hillary; Presidency\n, the semicolon would be the separator between multiple Sees\n\n\n\n\n\n\nseparator_between_seealsos\n\n\nString\n\n\nSame as above, but with See Also\n\n\n\n\n\n\nseparator_see_subentry\n\n\nString\n\n\nWhen a see/see also points to a subentry instead of a main topic, this separator is used.  For example, in the entry \nThe Raven. See Poe, works by\n, the comma might indicate that 'works by' is a subentry of 'Poe', and that this see is pointing to that particular subentry, rather than the main entry 'Poe'\n\n\n\n\n\n\ninline_see_start\n\n\nString\n\n\nIn inline subentries, multiple Sees are usually enclosed in wrapping punctuation, to demarcate the difference between multiple sees on one subentry and different subentries. For example, take this monster of an entry: \nhumanism, 8, 9, 18, 24, 89, 94, 101, 102, 172, 180n7, 250n29; humanist resistance to Adams\u2019s works, 68, 77; humanist self (see also self; subjectivity; subject\u2013object relation), 7, 20, 101, 110, 164, 169. See also anthropocentrism; human rights\n. In this case, the separator between subentries and multiple see also relationships are \nexactly the same\n (a semicolon). However, the parenthesis allow us to tell when the list of see/see also relations ends, so we can distinguish them from separate subentries\n\n\n\n\n\n\ninline_see_also_start\n\n\nString\n\n\nSame as above, but wtih See Also\n\n\n\n\n\n\ninline_see_end\n\n\nString\n\n\nSeparator ending a list of See items in an inline subentry.  See \ninline_see_start\n for a fuller explanation\n\n\n\n\n\n\nsubentry_classes\n\n\nArray (String)\n\n\nCSS Classes used to locate subentries.  \nNote\n: This is \nonly\n used for separate line subentry indexes. An empty value for this property means that the index in questions uses only inline, rather than separate line, subentries\n\n\n\n\n\n\nseparator_between_subentries\n\n\nString\n\n\nFor inline subentries, the separator used to distinguish different subentries.  For example, in the entry example used in \ninline_see_start\n, the semicolon is used to separate different subentries.  \nNote\n: This is \nonly\n used for inline subentry indexes. An empty value for this property means that this index only has separate line subentries\n\n\n\n\n\n\nseparator_between_entry_and_occurrences\n\n\nString\n\n\nSeparator between an entry and its occurrences/page numbers\n\n\n\n\n\n\nseparator_before_first_subentry\n\n\nString\n\n\nIndexes sometimes collapse an entry and the first subentry into a single line.  For example, the entry \nClinton, William: presidency of\n is actually a main entry (\nClinton, William\n) and the first subentry (\npresidency of\n).  In this case, the \nseparator_before_first_subentry\n would be the colon (:)\n\n\n\n\n\n\nxpath_occurrence_link\n\n\nString\n\n\nxpath to find occurrences in an entry\n\n\n\n\n\n\nindicators_of_occurrence_range\n\n\nArray (String)\n\n\nCharacter(s) used to indicate a range of pages in an index, e.g. 145-54. Needs to be an array because indexes are inconsistent in their use of punctation (sometimes using a mixture of hyphens, em dashes, and en dahses)\n\n\n\n\n\n\ndocuments\n\n\nArray\n\n\nList of epubs associated with that particular indexpattern\n\n\n\n\n\n\ndocuments[...].id\n\n\nInteger\n\n\nInternal id and primary identifier for each epub\n\n\n\n\n\n\ndocuments[...].title\n\n\nString\n\n\nTitle of the Epub",
            "title": "Sources"
        },
        {
            "location": "/api/sources/#sources-api-overview",
            "text": "Description  Endpoint  Extra Parameters      List of All Epubs  /api/epub/document/all/     Epub Detail  /api/epub/document/DOCUMENT_ID/  withOccurrences    Single Page  /api/epub/location/DOCUMENT_ID/     List of All Indexpatterns  /api/epub/index-pattern/all/",
            "title": "Sources API Overview"
        },
        {
            "location": "/api/sources/#all-epubs",
            "text": "Lists all epubs in the system.  Note that this includes any epub in the system that has no index (and therefore no topics) or no page marker indicators in the original text (and therefore no pages in our system).  /api/epub/document/all/",
            "title": "All Epubs"
        },
        {
            "location": "/api/sources/#example-response",
            "text": "[ \n     { \n         \"title\" :   \"Black Rage Confronts the Law\" , \n         \"author\" :   \"Paul Harris\" , \n         \"publisher\" :   \"New York University\" , \n         \"id\" :   95 , \n         \"isbn\" :   \"9780814735923\" \n     }, \n     { \n         \"title\" :   \"Negrophobia and Reasonable Racism\" , \n         \"author\" :   \"Jody David Armour\" , \n         \"publisher\" :   \"New york University Press\" , \n         \"id\" :   67 , \n         \"isbn\" :   \"9780814706404\" \n     }, \n     ... \n     { \n         \"title\" :   \"Teaching What You\u2019re Not\" , \n         \"author\" :   \"Katherine J. Mayberry\" , \n         \"publisher\" :   \"York University Press\" , \n         \"id\" :   88 , \n         \"isbn\" :   \"9780814755471\" \n     }  ]",
            "title": "Example Response"
        },
        {
            "location": "/api/sources/#field-descriptions",
            "text": "Field  Type  Description      id  Integer  Internal id and primary identifier for each epub.    title  String  Title of the Epub    author  String  Author of the Epub    publisher  String  Publisher of the epub.  Note that this information is extracted from the text itself, and may not be exact string matches across epubs for any given publisher (as you can see in the example above, which has three different ways of referring to NYU Press)    isbn  String  ISBN number for the book. Note that this is extracted from the epub filename, not extracted from any metadata from the book itself. Be aware of this limitation in future ingests",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/sources/#epub-detail",
            "text": "Lists all Pages in a given Epub.  /api/epub/document/DOCUMENT_ID/  For expanded location information, you can set the query parameter  withOccurrences  to  True :  /api/epub/document/DOCUMENT_ID/?withOccurrences=True  That will give expanded location information, including occurrences and pagenumbers. The location data for this response is identical to that from the  Location Detail , just as an array of every page for that particular book. Refer to the  single page  endpoint for a description of the response structure and fields.",
            "title": "Epub Detail"
        },
        {
            "location": "/api/sources/#example-response_1",
            "text": "{ \n     \"title\" :   \"Originality, Imitation, and Plagiarism\" , \n     \"author\" :   \"Eisner, Caroline; Vicinus, Martha\" , \n     \"id\" :   12 , \n     \"publisher\" :   \"University of Michigan Press and University of Michigan Library\" , \n     \"isbn\" :   \"9780472024445\" , \n     \"locations\" :   [ \n         { \n             \"id\" :   2220 , \n             \"localid\" :   \"page_i\" , \n             \"sequence_number\" :   1 , \n             \"content\" :   \"\" \n         }, \n         { \n             \"id\" :   2221 , \n             \"localid\" :   \"page_ii\" , \n             \"sequence_number\" :   2 , \n             \"content\" :   \"\" \n         }, \n         ... \n         { \n             \"id\" :   2495 , \n             \"localid\" :   \"page_268\" , \n             \"sequence_number\" :   276 , \n             \"content\" :   \"\\nSony Corp of America v. Universal Studios, Inc., 149, 150, 154\\nSouter, David H., 150\\nSponsoring Con...\" \n         }, \n         { \n             \"id\" :   2496 , \n             \"localid\" :   \"page_269\" , \n             \"sequence_number\" :   277 , \n             \"content\" :   \"\\nWikiWikiWeb, 45n1\\nWimmer, Warren, 66, 67\\nWinter, Richard, 183\\nWollheim, Richard, 117\\nWoodmansee, Ma...\" \n         } \n     ]  }",
            "title": "Example Response"
        },
        {
            "location": "/api/sources/#field-descriptions_1",
            "text": "Field  Type  Description      id  Integer  Internal id and primary identifier for each epub    title  String  Title of the Epub    author  String  Author of the Epub    epub  String  Publisher of the epub. See  All Epubs  for note about consistency.    isbn  String  ISBN number for the book. See  All Epubs  for note about sourcing.    locations[...].id  Integer  Internal id and primary identifier for each page. Usual caveats regarding IDs apply    locations[...].localid  String  Human-readable representation of the page number    locations[...].sequence_number  Integer  Number used for properly ordering pages in a book    locations[...].content  String  Excerpt of the content from the page (roughly the first 100 characters)",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/sources/#single-page",
            "text": "Contents information on a single page, including the pages full textual content and all occurrences at that particular page.  /api/epub/location/LOCATION_ID/",
            "title": "Single Page"
        },
        {
            "location": "/api/sources/#example-response_2",
            "text": "[ \n     { \n         \"id\" :   2410 , \n         \"content\" :   { \n             \"content_unique_indicator\" :   \"12-page_183\" , \n             \"content_descriptor\" :   \"page 183\" , \n             \"text\" :   \"Plagiarism, a Turnitin Trial, and an Experience of Cultural Disorientation\\nLisa Emerson\\nIn October 2003, all faculty at Massey University, a research university in New Zealand, were invited to join a university-wide trial of Turnitin.com, a plagiarism detection system being considered for widespread use to combat a perceived \u201cplagiarism epidemic.\u201d The university framed the Turnitin trial as an investigation into issues of academic integrity and a step in strengthening academic misconduct procedures, with no reference to plagiarism as an issue of academic writing. This is not, perhaps, surprising since rhetoric and composition is an emerging discipline in New Zealand and is not yet fully established as part of the curriculum. As the only full-time faculty member employed at this time to teach academic writing at the university, I joined the trial, hoping to bring a different perspective on the issue.\\nThe purpose of this essay is to consider the value of Turnitin primarily from the context of reflecting, as a writing teacher, on what the trial taught me about writing, about my role as a writing teacher, about students and learning, and on the gaps that exist in our understanding of and relationship with one another in the student-teacher relationship. To deepen my reflection, I have used a form of reflective practice established by Donald Sch\u00f6n and developed by the British school of action research (see, for example, Whitehead and McNiff). This reflective paradigm, as described by Richard Winter, Alyson Buck, and Paula Sobiechowska, \u201crequires more than observation. It requires us to engage in a process of introspection leading to self-clarification\u201d (186). This essay summarizes the process of observation and self-clarification I engaged in as part of the university trial.\\n\" \n         }, \n         \"document\" :   { \n             \"title\" :   \"Originality, Imitation, and Plagiarism\" , \n             \"author\" :   \"Eisner, Caroline; Vicinus, Martha\" , \n             \"publisher\" :   \"University of Michigan Press and University of Michigan Library\" , \n             \"id\" :   12 , \n             \"isbn\" :   \"9780472024445\" \n         }, \n         \"context\" :   null , \n         \"occurrences\" :   [ \n             { \n                 \"basket\" :   { \n                     \"id\" :   2559 , \n                     \"display_name\" :   \"Buck, Alyson\" \n                 }, \n                 \"id\" :   8591 , \n                 \"ring_next\" :   null , \n                 \"ring_prev\" :   null \n             }, \n             { \n                 \"basket\" :   { \n                     \"id\" :   2859 , \n                     \"display_name\" :   \"Massey University\" \n                 }, \n                 \"id\" :   9409 , \n                 \"ring_next\" :   2419 , \n                 \"ring_prev\" :   2419 \n             }, \n             ... \n             { \n                 \"basket\" :   { \n                     \"id\" :   3118 , \n                     \"display_name\" :   \"Winter, Richard\" \n                 }, \n                 \"id\" :   10083 , \n                 \"ring_next\" :   null , \n                 \"ring_prev\" :   null \n             } \n         ], \n         \"pagenumber\" :   { \n             \"filepath\" :   \"OEBPS/24_chap16.xhtml\" , \n             \"pagenumber_tag\" :   \"<a id=\\\"page_183\\\">\" , \n             \"css_selector\" :   \"#page_183\" , \n             \"xpath\" :   \"a[@id=\\\"page_183\\\"]\" \n         }, \n         \"localid\" :   \"page_183\" , \n         \"next_location_id\" :   2411 , \n         \"previous_location_id\" :   2409 \n     }  ]",
            "title": "Example Response"
        },
        {
            "location": "/api/sources/#field-descriptions_2",
            "text": "Field  Type  Description      id  Integer  Internal id and primary identifier of this page    content.content_unique_indicator  String  Human readable identifier of this content block. Usually a combination of the Epub's internal ID and the Page's 'localid'.  Used internally for deduplication.    content.content_descriptor  String  Human readable description of the content's location    content.text  String  Full text of the page    document.id  Integer  Internal id and primary identifier for each epub    document.title  String  Title of the Epub    document.author  String  Author of the Epub    document.epub  String  Publisher of the epub. See  All Epubs  for note about consistency.    document.isbn  String  ISBN number for the book. See  All Epubs  for note about sourcing.    context  String  Not used in Enhanced Network Monographs    occurrences  List  All the topics on this page    occurrences[...].id  Integer  Internal id for this occurrence    occurrences[...].basket.id  Integer  Internal id for this topic    occurrences[...].basket.display_name  Integer  display_name for given topic. See  All Topics  for more information    occurrences[...].ring_next  Integer  Location ID (i.e. internal id of the page) of the next occurrence of this topic.  If  null , then this is the only instance of this topic    occurrences[...].ring_previous  Integer  Location ID (i.e. internal id of the page) of the previous occurrence of this topic.  If  null , then this is the only instance of this topic    pagenumber.filepath  String  Location of the specific xml file in which this location is found, relative to the root folder of the unzipped epub    pagenumber.pagenumber_tag  String  Reconstructed pagenumber identifier tag as it appears in the epub    pagenumber.css_selector  String  CSS Selector for finding the location within the original xml file    pagenumber.xpath  String  xpath for finding the location within the original xml file    localid  String  Human-readable representation of the page number    next_location_id  Integer  Id of the next location (page) in this epub    previous_location_id  Integer  Id of the previous location (page) in this epub",
            "title": "Field Descriptions"
        },
        {
            "location": "/api/sources/#all-indexpatterns",
            "text": "A list of all IndexPattern objects. Indexpatterns are primarily used for extraction, but are also used for conforming the  localid  attribute (which is essentially just a stored pagenumber) to the css selectors/xpath/tag necessary for finding the location in the original epub file.  /api/epub/index-pattern/all/",
            "title": "All IndexPatterns"
        },
        {
            "location": "/api/sources/#example-response_3",
            "text": "[ \n     { \n         \"name\" :   \"nyup1\" , \n         \"description\" :   \"NYUP as of Spring 2015\" , \n         \"pagenumber_pre_strings\" :   [ \n             \"id=\\\"page_\" \n         ], \n         \"pagenumber_css_selector_pattern\" :   \"#page_{}\" , \n         \"pagenumber_xpath_pattern\" :   \"a[@id=\\\"page_{}\\\"]\" , \n         \"xpath_entry\" :   \"p[@class='indexmain' or @class='indexmain1']\" , \n         \"see_split_strings\" :   [ \n             \". See\" , \n             \", See\" , \n             \", see\" , \n             \"(see\" \n         ], \n         \"see_also_split_strings\" :   [ \n             \", See also\" , \n             \". See also\" , \n             \"See also\" , \n             \" see also\" , \n             \", also\" , \n             \"(see also\" \n         ], \n         \"xpath_see\" :   \"em\" , \n         \"xpath_seealso\" :   \"em\" , \n         \"separator_between_sees\" :   \";\" , \n         \"separator_between_seealsos\" :   \";\" , \n         \"separator_see_subentry\" :   \",\" , \n         \"inline_see_start\" :   \"\" , \n         \"inline_see_also_start\" :   \"\" , \n         \"inline_see_end\" :   \"\" , \n         \"inline_see_also_end\" :   \"\" , \n         \"subentry_classes\" :   [ \n             \"indexsub\" \n         ], \n         \"separator_between_subentries\" :   \"\" , \n         \"separator_between_entry_and_occurrences\" :   \",\" , \n         \"separator_before_first_subentry\" :   \":\" , \n         \"xpath_occurrence_link\" :   \"a[@href]\" , \n         \"indicators_of_occurrence_range\" :   [ \n             \"\u2013\" , \n             \"\u2014\" \n         ], \n         \"documents\" :   [ \n             { \n                 \"title\" :   \"Busting the Mob\" , \n                 \"id\" :   464 \n             }, \n             { \n                 \"title\" :   \"The Transformation of Rage\" , \n                 \"id\" :   465 \n             }, \n             ... \n             { \n                 \"title\" :   \"Bird-Self Accumulated\" , \n                 \"id\" :   463 \n             } \n         ] \n     }, \n     ...  ]",
            "title": "Example Response"
        },
        {
            "location": "/api/sources/#field-descriptions_3",
            "text": "Field  Type  Description      name  String  Unique string representation of indexpattern. Primary means of fetching a pattern from the database    description  String  Longer, human-readable text description of the IndexPattern.  Note:  Descriptions are  not  guaranteed to be unique by the database, and are merely meant to contain supplemental information.    pagenumber_pre_strings  Array (String)  When locating pagenumbers, this is a list of patterns to look for and split the text on. After this processing is done, the result should be a list of strings with the pagenumber at the beginning of the string, followed by the content of the page. Used for extracting both locations and content from an epub    pagenumber_css_selector_pattern  String  Pattern used to conform a page number (as stored in localid) to a css selector. All patterns must contain \"{}\" where the pagenumber should go, as python string formatting is used to add the pagenumber from any given location    pagenumber_xpath_pattern  String  Pattern used to conform a page number (as stored in localid) to an xpath. All patterns must contain \"{}\" where the pagenumber should go, as python string formatting is used to add the pagenumber from any given location    xpath_entry  String  xpath used to locate main entries in the index    see_split_strings  Array (String)  When parsing an entry, split on these strings to separate a \"See\" from the main entry (Sees are not always reliably enclosed in tags, and therefore require string processing)    see_also_split_strings  Array (String)  Same as above, but with See Also    xpath_see  String  Tag generally (but not always) used to enclose a \"See\". Used for locating \"see\" objects in inline subentry index entries.    xpath_see_also  String  Same as above, but with See Also    separator_between_sees  String  When an entry has multiple See references, this is the character used to separate them.  For example, in the entry  Clinton, William. See Clinton, Hillary; Presidency , the semicolon would be the separator between multiple Sees    separator_between_seealsos  String  Same as above, but with See Also    separator_see_subentry  String  When a see/see also points to a subentry instead of a main topic, this separator is used.  For example, in the entry  The Raven. See Poe, works by , the comma might indicate that 'works by' is a subentry of 'Poe', and that this see is pointing to that particular subentry, rather than the main entry 'Poe'    inline_see_start  String  In inline subentries, multiple Sees are usually enclosed in wrapping punctuation, to demarcate the difference between multiple sees on one subentry and different subentries. For example, take this monster of an entry:  humanism, 8, 9, 18, 24, 89, 94, 101, 102, 172, 180n7, 250n29; humanist resistance to Adams\u2019s works, 68, 77; humanist self (see also self; subjectivity; subject\u2013object relation), 7, 20, 101, 110, 164, 169. See also anthropocentrism; human rights . In this case, the separator between subentries and multiple see also relationships are  exactly the same  (a semicolon). However, the parenthesis allow us to tell when the list of see/see also relations ends, so we can distinguish them from separate subentries    inline_see_also_start  String  Same as above, but wtih See Also    inline_see_end  String  Separator ending a list of See items in an inline subentry.  See  inline_see_start  for a fuller explanation    subentry_classes  Array (String)  CSS Classes used to locate subentries.   Note : This is  only  used for separate line subentry indexes. An empty value for this property means that the index in questions uses only inline, rather than separate line, subentries    separator_between_subentries  String  For inline subentries, the separator used to distinguish different subentries.  For example, in the entry example used in  inline_see_start , the semicolon is used to separate different subentries.   Note : This is  only  used for inline subentry indexes. An empty value for this property means that this index only has separate line subentries    separator_between_entry_and_occurrences  String  Separator between an entry and its occurrences/page numbers    separator_before_first_subentry  String  Indexes sometimes collapse an entry and the first subentry into a single line.  For example, the entry  Clinton, William: presidency of  is actually a main entry ( Clinton, William ) and the first subentry ( presidency of ).  In this case, the  separator_before_first_subentry  would be the colon (:)    xpath_occurrence_link  String  xpath to find occurrences in an entry    indicators_of_occurrence_range  Array (String)  Character(s) used to indicate a range of pages in an index, e.g. 145-54. Needs to be an array because indexes are inconsistent in their use of punctation (sometimes using a mixture of hyphens, em dashes, and en dahses)    documents  Array  List of epubs associated with that particular indexpattern    documents[...].id  Integer  Internal id and primary identifier for each epub    documents[...].title  String  Title of the Epub",
            "title": "Field Descriptions"
        },
        {
            "location": "/credits/",
            "text": "Acknowledgements\n\n\nBuilt by Infoloom, Inc:\n\n\n\n\nMichel Biezunski\n\n\nMatt Nishi-Broach\n\n\n\n\nfor the Digital Library Technology Services at New York University\n\n\nMade with funding from the Mellon Foundation",
            "title": "Acknowledgements"
        },
        {
            "location": "/credits/#acknowledgements",
            "text": "Built by Infoloom, Inc:   Michel Biezunski  Matt Nishi-Broach   for the Digital Library Technology Services at New York University  Made with funding from the Mellon Foundation",
            "title": "Acknowledgements"
        }
    ]
}